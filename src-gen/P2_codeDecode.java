// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/P2_codeDecode.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class P2_codeDecode {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object InputAlphabet=null;
  public static Object OutputAlphabet=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=9;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=12;
      InputAlphabet=$fix($opIntvlY('a','z'));
      $line=13;
      OutputAlphabet=$fix($opIntvlY('a','z'));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_codeDecode.class,"main",$line);
    }
  }
  public static Object consoleCodeDecode(ITransducer C, ITransducer D) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=25;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=26;
      String currentInput=$cast(String.class,$fix(" "));
      $line=28;
      System.out.println($message(new Object[]{"------------------------------------------------------------- "}));
      $line=29;
      System.out.println($message(new Object[]{"Welcome to Proyect 2: Coder-Decoder! \n"}));
      $line=31;
      while (true) {
        if (!(!$opEqualY(currentInput,""))) break;
        $line=33;
        System.out.println($message(new Object[]{"------------------------------------------------------------- "}));
        $line=34;
        System.out.println($message(new Object[]{"Enter the string you want to use (empty stringto exit):"}));
        $line=36;
        if (!$opEqualY(currentInput,"")) {
          $line=38;
          currentInput=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
          $line=40;
          if (!$opEqualY(currentInput,"")) {
            $line=41;
            Object valid=$fix(false);
            $line=42;
            String option=$cast(String.class,$fix(""));
            $line=45;
            while (true) {
              if (!(!$bool(valid))) break;
              $line=46;
              System.out.println($message(new Object[]{"What do you want to do with this string?"}));
              $line=47;
              System.out.println($message(new Object[]{"1. code"}));
              $line=48;
              System.out.println($message(new Object[]{"2. decode"}));
              $line=49;
              System.out.println($message(new Object[]{"3. code and decode"}));
              $line=52;
              option=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
              $line=55;
              if ($opMembrY(option,GCollections.asSet("1","2","3"))) {
                $line=56;
                valid=$fix(true);
              }
              else {
                $line=58;
                System.out.println($message(new Object[]{"You didnt select a valid Option, try again. \n"}));
              }
            }
            $line=65;
            String codedString=$cast(String.class,$fix(""));
            $line=66;
            String deCodedString=$cast(String.class,$fix(""));
            $line=67;
            Boolean isAccepted=null;
            isAccepted=$defaultValue(Boolean.class);
            $line=69;
            String codedStrScript=$cast(String.class,$fix("The Coded string was: "));
            $line=70;
            String deCodedStrScript=$cast(String.class,$fix("The DeCoded string was: "));
            $line=75;
            if ($bool(((java.lang.String)option).equals("1"))) {
              $line=76;
              isAccepted=$cast(Boolean.class,$fix(((gold.structures.automaton.ITransducer)C).acceptsString($cast(java.lang.String.class,currentInput))));
              $line=77;
              codedString=$cast(String.class,$fix(((gold.structures.automaton.ITransducer)C).getOutputString()));
              $line=78;
              System.out.println($message(new Object[]{((java.lang.String)codedStrScript).concat($cast(java.lang.String.class,codedString))}));
            }
            else {
              $line=81;
              if ($bool(((java.lang.String)option).equals("2"))) {
                $line=82;
                isAccepted=$cast(Boolean.class,$fix(((gold.structures.automaton.ITransducer)D).acceptsString($cast(java.lang.String.class,currentInput))));
                $line=83;
                deCodedString=$cast(String.class,$fix(((gold.structures.automaton.ITransducer)D).getOutputString()));
                $line=84;
                System.out.println($message(new Object[]{((java.lang.String)deCodedStrScript).concat($cast(java.lang.String.class,deCodedString))}));
              }
              else {
                $line=89;
                isAccepted=$cast(Boolean.class,$fix(((gold.structures.automaton.ITransducer)C).acceptsString($cast(java.lang.String.class,currentInput))));
                $line=90;
                codedString=$cast(String.class,$fix(((gold.structures.automaton.ITransducer)C).getOutputString()));
                $line=91;
                System.out.println($message(new Object[]{((java.lang.String)codedStrScript).concat($cast(java.lang.String.class,codedString))}));
                $line=93;
                isAccepted=$cast(Boolean.class,$fix(((gold.structures.automaton.ITransducer)D).acceptsString($cast(java.lang.String.class,currentInput))));
                $line=94;
                deCodedString=$cast(String.class,$fix(((gold.structures.automaton.ITransducer)D).getOutputString()));
                $line=95;
                System.out.println($message(new Object[]{((java.lang.String)deCodedStrScript).concat($cast(java.lang.String.class,deCodedString))}));
                $line=97;
                String isEqual=$cast(String.class,$fix($opAdditY($opAdditY("The input string is ",(($bool(((java.lang.String)currentInput).equals(deCodedString)))?(""):("not "))),"equal to the decoded string")));
                $line=98;
                System.out.println($message(new Object[]{$opAdditY("\n",isEqual)}));
              }
            }
          }
        }
      }
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_codeDecode.class,"consoleCodeDecode",$line);
    }
    return $result;
  }
}
