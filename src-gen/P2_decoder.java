// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/P2_decoder.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class P2_decoder {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static String alph_str=null;
  static {
    int $line=0;
    $line=16;
    $try:try {
      alph_str=$defaultValue(String.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,null,$line);
    }
  }
  public static char[] alph=null;
  static {
    int $line=0;
    $line=17;
    $try:try {
      alph=$defaultValue(char[].class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,null,$line);
    }
  }
  public static Integer lastPos=null;
  static {
    int $line=0;
    $line=18;
    $try:try {
      lastPos=$defaultValue(Integer.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,null,$line);
    }
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=21;
      alph_str=$cast(String.class,$fix("abcdefghijklmnopqrstuvwxyz"));
      $line=22;
      alph=$cast(char[].class,$fix(((java.lang.String)alph_str).toCharArray()));
      $line=23;
      lastPos=$cast(Integer.class,$fix($opSubtrY($invokeField("length",alph),1)));
      $line=26;
      Object Q=$fix(GCollections.asSet("d0","d1","d2","d3","d4","d5","d6"));
      $line=27;
      Object \u03A3=$fix($opIntvlY('a','z'));
      $line=28;
      Object \u0393=$fix($opIntvlY('a','z'));
      $line=29;
      Object q=$fix("d0");
      $line=30;
      Object F=$fix(Q);
      $line=32;
      Object M=$fix($invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,\u0393,q,F,new GMethod(P2_decoder.class,"\u03B4"),new GMethod(P2_decoder.class,"g"),new GMethod(P2_decoder.class,"h")}));
      $line=34;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,M));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,"main",$line);
    }
  }
  public static Object \u03B4(String q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=42;
      String stateId=$cast(String.class,$fix("d"));
      $line=45;
      if ($bool((!$bool(((java.lang.String)q).endsWith($cast(java.lang.String.class,6)))&&!$bool(((java.lang.String)q).endsWith($cast(java.lang.String.class,"r")))))) {
        $line=46;
        Integer nextStateNumber=$cast(Integer.class,$fix($opAdditY(Integer.parseInt($cast(java.lang.String.class,$getArrayValue(q,new Object[]{1}))),1)));
        $line=47;
        $result=((java.lang.String)stateId).concat($cast(java.lang.String.class,Integer.toString($int(nextStateNumber))));
        if (true) break $try;
      }
      else {
        $line=50;
        if ($bool(((java.lang.String)q).endsWith($cast(java.lang.String.class,6)))) {
          $line=51;
          $result=((java.lang.String)stateId).concat($cast(java.lang.String.class,"0"));
          if (true) break $try;
        }
      }
      $line=54;
      $rethrow(new RuntimeException("The function \"\u03B4(q:String,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=61;
      if ($opEqualY(q,"d0")) {
        $line=62;
        $result=P2_decoder.getPrevChar($cast(java.lang.Character.class,s));
        if (true) break $try;
      }
      else {
        $line=63;
        if ($bool((($opEqualY(q,"d1")||$opEqualY(q,"d4"))||$opEqualY(q,"d5")))) {
          $line=64;
          $result=s;
          if (true) break $try;
        }
        else {
          $line=65;
          if ($opEqualY(q,"d3")) {
            $line=66;
            $result=P2_decoder.getNextChar($cast(java.lang.Character.class,s));
            if (true) break $try;
          }
          else {
            $line=68;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=70;
      $rethrow(new RuntimeException("The function \"h(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,"h",$line);
    }
    return $result;
  }
  public static Object getPrevChar(Character currentChar) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=73;
      $result=(($bool($opEqualY($invokeMethod("indexOf",alph_str,new Object[]{currentChar}),0)))?(((char[])alph)[$int(lastPos)]):(((char[])alph)[$int($opSubtrY($invokeMethod("indexOf",alph_str,new Object[]{currentChar}),1))]));
      if (true) break $try;
      $line=74;
      $rethrow(new RuntimeException("The function \"getPrevChar(currentChar:Character)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,"getPrevChar",$line);
    }
    return $result;
  }
  public static Object getNextChar(Character currentChar) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=77;
      $result=(($bool($opEqualY($invokeMethod("indexOf",alph_str,new Object[]{currentChar}),lastPos)))?(((char[])alph)[$int(0)]):(((char[])alph)[$int($opAdditY($invokeMethod("indexOf",alph_str,new Object[]{currentChar}),1))]));
      if (true) break $try;
      $line=78;
      $rethrow(new RuntimeException("The function \"getNextChar(currentChar:Character)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,"getNextChar",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=84;
      $result="";
      if (true) break $try;
      $line=85;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2_decoder.class,"g",$line);
    }
    return $result;
  }
}
